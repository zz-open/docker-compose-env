version: "3.8"

volumes:
  etcd1:
    driver: ${VOLUMES_DRIVER}
  etcd2:
    driver: ${VOLUMES_DRIVER}
  etcd3:
    driver: ${VOLUMES_DRIVER}

x-variable:
  etcd-bin: &etcd-bin '/usr/local/bin/etcd'
  initial-cluster: &initial-cluster '--initial-cluster=${ETCD_NAME_NODE1}=${ETCD_API_PROTOCOL}://${ETCD_BACKEND_IP_NODE1}:2380,${ETCD_NAME_NODE2}=${ETCD_API_PROTOCOL}://${ETCD_BACKEND_IP_NODE2}:2380,${ETCD_NAME_NODE3}=${ETCD_API_PROTOCOL}://${ETCD_BACKEND_IP_NODE3}:2380'
  data-dir: &data-dir '--data-dir=/etcd_data'
  enable-pprof: &enable-pprof '--enable-pprof=true'
  initial-cluster-token: &initial-cluster-token '--initial-cluster-token=${ETCD_INITIAL_CLUSTER_TOKEN}'
  initial-cluster-state: &initial-cluster-state '--initial-cluster-state=${ETCD_INITIAL_CLUSTER_STATE}'
  client-cert-auth: &client-cert-auth '--client-cert-auth'
  peer-client-cert-auth: &peer-client-cert-auth '--peer-client-cert-auth'
  trusted-ca-file: &trusted-ca-file '--trusted-ca-file=/etcd-ssl-certs-dir/ca.pem'
  cert-file: &cert-file '--cert-file=/etcd-ssl-certs-dir/${ETCD_CERT_PREFIX}.pem'
  key-file: &key-file '--key-file=/etcd-ssl-certs-dir/${ETCD_CERT_PREFIX}-key.pem'
  peer-trusted-ca-file: &peer-trusted-ca-file '--peer-trusted-ca-file=/etcd-ssl-certs-dir/ca.pem'
  peer-cert-file: &peer-cert-file '--peer-cert-file=/etcd-ssl-certs-dir/${ETCD_CERT_PREFIX}.pem'
  peer-key-file: &peer-key-file '--peer-key-file=/etcd-ssl-certs-dir/${ETCD_CERT_PREFIX}-key.pem'


x-build: &build
  build:
    context: ${ETCD_HOST_PATH}
    args:
      ETCD_VERSION: ${ETCD_VERSION}

services:

### ETCD NODE1 ##############################################
  etcd1:
    <<: *build
    container_name: ${ETCD_CONTAINER_NAME_NODE1}
    hostname: ${ETCD_HOSTNAME_NODE1}
    privileged: true
    command:
      - *etcd-bin
      - "--name=${ETCD_NAME_NODE1}"
      - "--listen-client-urls=${ETCD_LISTEN_CLIENT_URLS_NODE1}"
      - "--advertise-client-urls=${ETCD_ADVERTISE_CLIENT_URLS_NODE1}"
      - "--listen-peer-urls=${ETCD_LISTEN_PEER_CLIENT_URLS_NODE1}"
      - "--initial-advertise-peer-urls=${ETCD_INITIAL_ADVERTISE_PEER_URLS_NODE1}"
      - *initial-cluster
      - *data-dir
      - *enable-pprof
      - *initial-cluster-token
      - *initial-cluster-state
      - *client-cert-auth
      - *peer-client-cert-auth
      - *trusted-ca-file
      - *cert-file
      - *key-file
      - *peer-trusted-ca-file
      - *peer-cert-file
      - *peer-key-file
    volumes:
      - "${DATA_PATH_HOST}/${ETCD_CONTAINER_NAME_NODE1}:/etcd_data"
      - "${ETCD_HOST_PATH}/certs:${ETCD_SSL_CERTS_PATH_CONTAINER}"
      - "${ETCD_HOST_PATH}/peer-certs:${ETCD_SSL_PEER_CERTS_PATH_CONTAINER}"
    environment:
      - TZ=${TZ}
    ports:
      - "${ETCD_HOST_PORT_NODE1}:2379"
      - "${ETCD_HOST_REVERSE_PORT_NODE1}:2380"
    networks:
      backend:
        ipv4_address: ${ETCD_BACKEND_IP_NODE1}

### ETCD NODE2 ##############################################
  etcd2:
    <<: *build
    container_name: ${ETCD_CONTAINER_NAME_NODE2}
    hostname: ${ETCD_HOSTNAME_NODE2}
    privileged: true
    command:
      - *etcd-bin
      - "--name=${ETCD_NAME_NODE2}"
      - "--listen-client-urls=${ETCD_LISTEN_CLIENT_URLS_NODE2}"
      - "--advertise-client-urls=${ETCD_ADVERTISE_CLIENT_URLS_NODE2}"
      - "--listen-peer-urls=${ETCD_LISTEN_PEER_CLIENT_URLS_NODE2}"
      - "--initial-advertise-peer-urls=${ETCD_INITIAL_ADVERTISE_PEER_URLS_NODE2}"
      - *initial-cluster
      - *data-dir
      - *enable-pprof
      - *initial-cluster-token
      - *initial-cluster-state
      - *client-cert-auth
      - *peer-client-cert-auth
      - *trusted-ca-file
      - *cert-file
      - *key-file
      - *peer-trusted-ca-file
      - *peer-cert-file
      - *peer-key-file
    volumes:
      - "${DATA_PATH_HOST}/${ETCD_CONTAINER_NAME_NODE2}:/etcd_data"
      - "${ETCD_HOST_PATH}/certs:${ETCD_SSL_CERTS_PATH_CONTAINER}"
      - "${ETCD_HOST_PATH}/peer-certs:${ETCD_SSL_PEER_CERTS_PATH_CONTAINER}"
    environment:
      - TZ=${TZ}
    ports:
      - "${ETCD_HOST_PORT_NODE2}:2379"
      - "${ETCD_HOST_REVERSE_PORT_NODE2}:2380"
    networks:
      backend:
        ipv4_address: ${ETCD_BACKEND_IP_NODE2}


### ETCD NODE3 ##############################################
  etcd3:
    <<: *build
    container_name: ${ETCD_CONTAINER_NAME_NODE3}
    hostname: ${ETCD_HOSTNAME_NODE3}
    privileged: true
    command:
      - *etcd-bin
      - "--name=${ETCD_NAME_NODE3}"
      - "--listen-client-urls=${ETCD_LISTEN_CLIENT_URLS_NODE3}"
      - "--advertise-client-urls=${ETCD_ADVERTISE_CLIENT_URLS_NODE3}"
      - "--listen-peer-urls=${ETCD_LISTEN_PEER_CLIENT_URLS_NODE3}"
      - "--initial-advertise-peer-urls=${ETCD_INITIAL_ADVERTISE_PEER_URLS_NODE3}"
      - *initial-cluster
      - *data-dir
      - *enable-pprof
      - *initial-cluster-token
      - *initial-cluster-state
      - *client-cert-auth
      - *peer-client-cert-auth
      - *trusted-ca-file
      - *cert-file
      - *key-file
      - *peer-trusted-ca-file
      - *peer-cert-file
      - *peer-key-file
    volumes:
      - "${DATA_PATH_HOST}/${ETCD_CONTAINER_NAME_NODE3}:/etcd_data"
      - "${ETCD_HOST_PATH}/certs:${ETCD_SSL_CERTS_PATH_CONTAINER}"
      - "${ETCD_HOST_PATH}/peer-certs:${ETCD_SSL_PEER_CERTS_PATH_CONTAINER}"
    environment:
      - TZ=${TZ}
    ports:
      - "${ETCD_HOST_PORT_NODE3}:2379"
      - "${ETCD_HOST_REVERSE_PORT_NODE3}:2380"
    networks:
      backend:
        ipv4_address: ${ETCD_BACKEND_IP_NODE3}